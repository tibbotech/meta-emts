--- /dev/null	2024-12-02 15:31:20.990681527 +0300
+++ a/arch/arm/boot/dts/sp7021-emtsH.dts	2024-12-03 00:41:26.864013678 +0300
@@ -0,0 +1,199 @@
+/*
+ * EMTS for LTPP
+ * Copyright (C) 2025 Tibbo Tech. - http://tibbo.com/tps/
+ * License: GPLv2 or later
+ */
+/dts-v1/;
+
+#include "sp7021-ltpp3g2revD.dtsi"
+
+/ {
+ model = "SP7021 EMTS v0.5";
+ clocks {
+  clk_can0: clk_can0 {
+    compatible = "fixed-clock";
+    #clock-cells = <0>;
+    clock-frequency  = <40000000>;  }; // max is 40MZ
+  clk_can1: clk_can1 {
+    compatible = "fixed-clock";
+    #clock-cells = <0>;
+    clock-frequency  = <40000000>;  }; // max is 40MZ
+
+ };
+};
+
+//&sp_ehci0 {  status = "disabled";  };
+&sp_ehci1 {  status = "disabled";  };
+
+&pctl {  interrupts = <>;  };
+
+&buzzer0 {  status = "disabled";  };
+&i2c_tps {  status = "disabled";  };
+&leds_SR {  gpios = <&pctl 1 GPIO_ACTIVE_HIGH>;  };
+
+&l2sw {
+ pinctrl-0 = <&ethA_pins &eth0_pins>;
+ mode = <1>;
+};
+
+/delete-node/ &eth_phy0;
+/delete-node/ &eth_phy1;
+
+/ {
+    soc@B {
+
+	mdio {
+	    eth_phy0: ethernet-phy@1 {  reg = <1>;  };
+	    eth_phy1: ethernet-phy@0 {  reg = <0>;  };
+	};
+
+    };
+};
+
+/* 55 (SPI) on s1 */
+&spi_controller0 {  status = "okay";
+  pinctrl-names = "default";
+  pinctrl-0 = <&pins_spim0>;
+  tps-sock = "s1";
+};
+
+&spi_controller0 {
+  can0: can@0 {
+    pinctrl-names = "default";
+    pinctrl-0 = <&pins_spidev0>;
+    compatible = "microchip,mcp2518fd";
+    reg = <0>;
+    clocks = <&clk_can0>;
+    spi-max-frequency = <5000000>;
+    interrupt-parent = <&intc>;
+    interrupts = <120 IRQ_TYPE_LEVEL_LOW>;
+    microchip,rx-int-gpios = <&pctl 13 GPIO_ACTIVE_LOW>;
+    // dv_iocon = <0x80000000>; // use default
+    dv_iocon = <0x20030300>; // SoF
+    // dv_oscva = <0x60>; // osc div
+    dv_oscva = <0x80000000>; // default
+    // dv_nober; // err counter off
+    // dv_noslp; // do not sleep
+  };
+};
+/* 55 (SPI) on s5 */
+&spi_controller1 {  status = "okay";
+  pinctrl-names = "default";
+  pinctrl-0 = <&pins_spim1>;
+  tps-sock = "s5";
+};
+
+&spi_controller1 {
+  can1: can@1 {
+    pinctrl-names = "default";
+    pinctrl-0 = <&pins_spidev1>;
+    compatible = "microchip,mcp2518fd";
+    reg = <0>;
+    clocks = <&clk_can1>;
+    spi-max-frequency = <5000000>;
+    interrupt-parent = <&intc>;
+    interrupts = <121 IRQ_TYPE_LEVEL_LOW>;
+    microchip,rx-int-gpios = <&pctl 21 GPIO_ACTIVE_LOW>;
+    // dv_iocon = <0x80000000>; // use default
+    dv_iocon = <0x20030300>; // SoF
+    // dv_oscva = <0x60>; // osc div
+    dv_oscva = <0x80000000>; // default
+    // dv_nober; // err counter off
+    // dv_noslp; // do not sleep
+  };
+};
+
+/delete-node/ &func_zero;
+/delete-node/ &ethA_pins;
+/delete-node/ &eth0_pins;
+/delete-node/ &leds_s0_def;
+/delete-node/ &leds_s0_slp;
+
+&pctl {
+
+ func_zero: func_zero {
+   sunplus,zero_func = <
+     MUXF_L2SW_LED_FLASH0
+     MUXF_L2SW_LED_ON0
+     MUXF_L2SW_LED_FLASH1
+     MUXF_L2SW_LED_ON1
+     MUXF_L2SW_P1_MAC_RMII_RXER
+     GROP_SPI_FLASH
+   >;
+ };
+
+ /* for all eth */
+ ethA_pins: pinmux_ethA_pins {
+  sunplus,pins = <
+       SPPCTL_IOPAD(49,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_CLK_OUT,0)
+       SPPCTL_IOPAD(44,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_MAC_SMI_MDC,0)
+       SPPCTL_IOPAD(43,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_MAC_SMI_MDIO,0)
+  >;
+ };
+ eth0_pins: pinmux_eth0_pins {
+  sunplus,pins = <
+       SPPCTL_IOPAD(45,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_RXER,0)
+       SPPCTL_IOPAD(52,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXEN,0)
+       SPPCTL_IOPAD(50,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXD0,0)
+       SPPCTL_IOPAD(51,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_TXD1,0)
+       SPPCTL_IOPAD(46,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_CRSDV,0)
+       SPPCTL_IOPAD(47,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_RXD0,0)
+       SPPCTL_IOPAD(48,SPPCTL_PCTL_G_PMUX,MUXF_L2SW_P0_MAC_RMII_RXD1,0)
+  >;
+ };
+
+/* 55 (SPI) on s1 */
+ pins_spim0: pins_spim0 {
+ sunplus,pins = <
+      SPPCTL_IOPAD(26,SPPCTL_PCTL_G_PMUX,MUXF_SPIM0_EN,0)
+      SPPCTL_IOPAD(25,SPPCTL_PCTL_G_PMUX,MUXF_SPIM0_DI,0)
+      SPPCTL_IOPAD(23,SPPCTL_PCTL_G_PMUX,MUXF_SPIM0_DO,0)
+      SPPCTL_IOPAD(27,SPPCTL_PCTL_G_PMUX,MUXF_SPIM0_CLK,0)
+    >;
+ };
+ pins_spidev0: pins_spidev0 {
+ sunplus,pins = <
+      SPPCTL_IOPAD(12,SPPCTL_PCTL_G_GPIO,0,0)
+      SPPCTL_IOPAD(13,SPPCTL_PCTL_G_GPIO,0,0)
+      SPPCTL_IOPAD(19,SPPCTL_PCTL_G_GPIO,0,0)
+      SPPCTL_IOPAD(22,SPPCTL_PCTL_G_PMUX,MUXF_GPIO_INT0,0)
+    >;
+ };
+/* 55 (SPI) on s5 */
+ pins_spim1: pins_spim1 {
+ sunplus,pins = <
+      SPPCTL_IOPAD(16,SPPCTL_PCTL_G_PMUX,MUXF_SPIM1_EN,0)
+      SPPCTL_IOPAD(18,SPPCTL_PCTL_G_PMUX,MUXF_SPIM1_DI,0)
+      SPPCTL_IOPAD(17,SPPCTL_PCTL_G_PMUX,MUXF_SPIM1_DO,0)
+      SPPCTL_IOPAD(15,SPPCTL_PCTL_G_PMUX,MUXF_SPIM1_CLK,0)
+    >;
+ };
+ pins_spidev1: pins_spidev1 {
+ sunplus,pins = <
+      SPPCTL_IOPAD(20,SPPCTL_PCTL_G_GPIO,0,0)
+      SPPCTL_IOPAD(21,SPPCTL_PCTL_G_GPIO,0,0)
+      SPPCTL_IOPAD(22,SPPCTL_PCTL_G_GPIO,0,0)
+      SPPCTL_IOPAD(14,SPPCTL_PCTL_G_PMUX,MUXF_GPIO_INT1,0)
+    >;
+ };
+
+ leds_s0_def: user_leds_s0_def {
+    sunplus,pins = <
+      SPPCTL_IOPAD(1,SPPCTL_PCTL_G_GPIO,MUXF_GPIO,SPPCTL_PCTL_L_INV)
+      SPPCTL_IOPAD(7,SPPCTL_PCTL_G_GPIO,0,SPPCTL_PCTL_L_INV)
+    >;
+ };
+ leds_s0_slp: user_leds_s0_slp {
+    sunplus,pins = <
+      SPPCTL_IOPAD(1,SPPCTL_PCTL_G_GPIO,0,0)
+      SPPCTL_IOPAD(7,SPPCTL_PCTL_G_GPIO,0,0)
+    >;
+ };
+
+};
+
+/ {
+    soc@B {
+
+    };
+};
